import re

def parse_tag(html):
    """
    Задание

    Функция parse_tag принимает параметр html - строку текста и возвращает имя тега
    и содержимое элемента в виде кортежа.
    Открывающий тег в html заключаестя в угловые скобки (< и >), а закрывающий
    - в < и />. Содержимое элемента помещается между открывающим и закрывающим
    тегом. Пример:

            <title>Заголовок</title>

    Тегом является слово title, а содержимое элемента - Заголовок.

    Для извлечения данных необходимо написать регулярное выражение, в котором
    выделить первую группу - имя тега, а во вторую - поместить содержимое.

    Если тег не имеет содержимого, то функция должна возвратить кортеж из
    одного элемента - имени тега

    >>> parse_tag("<title>Заголовок</title>")
    ('title', 'Заголовок')
    >>> parse_tag("<p>Параграф</p>")
    ('p', 'Параграф')
    >>> parse_tag("<h1>Заголовок первого уровня</h1>")
    ('h1', 'Заголовок первого уровня')
    >>> parse_tag("<a href='url' />")
    ('a',)
    >>> parse_tag("only text")
    ()
    """
    #([\"\']??)([^\"\' >]*?)\\1[^>]*>(.*)<\/a>
   # re_phone = re.compile(r"(.+?)\b\w+\b(?![^<]*>)"<\/a?>([\w.-]+))

    re_phone = re.compile(r"(.+?)\b\w+\b(?![^<]*?><\/\w+>)")
    #re_phone = re.compile(r"(.+?)\b\w+\b(?![^<]*\/w+>)")
    return re_phone.match(html) is not None

if __name__ == "__main__":
    import doctest

    doctest.testmod()


